name: MLflow CI/CD Pipeline - Model Retraining & Dockerize

on:
  push:
    branches:
      - main  
    paths:
      - 'MLProject/**' 
  workflow_dispatch: 

jobs:
  mlflow_retrain_and_dockerize:
    runs-on: ubuntu-latest
    
    # 1. Menetapkan kredensial DagsHub dan Docker Hub dari Secrets
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.DAGSHUB_MLFLOW_URI }} 
      MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }} 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }} 
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install Dependencies
        # Instal semua dependensi yang diperlukan
        run: |
          pip install mlflow==2.19.0 pandas scikit-learn dagshub joblib
          
      # 2. Run Model Retraining (SOLUSI BUG MLFLOW FINAL)
      - name: Run Model Retraining and Logging
        run: |
          # Panggil python modelling.py secara langsung untuk menghindari bug MLflow run
          python MLProject/modelling.py
          
      # 3. Login ke Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Ambil Run ID Terbaik dari DagsHub (SOLUSI ERROR: --max-results)
      - name: Get Latest Successful Run ID
        id: get_run_id
        run: |
          # Menggunakan perintah 'mlflow run list' yang paling stabil
          # awk 'NR==2 {print $1}' mengambil Run ID di baris kedua (Run ID terbaru)
          RUN_ID=$(mlflow run list --experiment-id 0 | awk 'NR==2 {print $1}')
          
          if [ -z "$RUN_ID" ]; then
            echo "::error::Tidak ada run yang ditemukan di DagsHub."
            exit 1
          fi
          echo "LATEST_RUN_ID=$RUN_ID" >> $GITHUB_ENV
          
      # 5. Build dan Push Docker Image (Kriteria 3: Advance)
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/salaries-model-ci:latest
          
          # MODEL_URI menunjuk ke file model yang di-log
          MODEL_URI=runs:/${{ env.LATEST_RUN_ID }}/ridge_model/best_ridge_model.pkl 

          echo "Membangun Docker Image dari $MODEL_URI"
          
          mlflow build-docker --model-uri $MODEL_URI --name $IMAGE_NAME
          
          docker push $IMAGE_NAME
